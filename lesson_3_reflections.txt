When would you want to use a remote repository rather than keeping all your work local?
When I want to share my code with the public or when I work with other people and want them to have access to the latests changes that I added.

What might you want to always pull changes manually rather than having Git automatically stay up-tp-date with your remote repository?
To avoid sharing changes that I may have commited locally but are not ready to be shared with public or other collaborators. This way we can control when we share our commits.

Describe the differences between forks, clones and branches. When would you use one instead of another?
Forks are to be used within GitHub when we want to work or improve some project that we have not access to and want to create a new github project. Forks only work in GitHub and are a shorcut to clone, create a remote and push. Clones are used when we want just to clone a repository to our local machine, and branches are used when we want to continue to work on the same repository but on a different feature or making some experimental code.

What is the benefit of having a copy of the last known state of the remote stored locally?
This way Git can tell us if the changes we made so far are ahead of the remote or even if they are also out-of-sync, meaning that someone also contributed or changed the code in the remote and that we need to merge it.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
There are other version control softwares, as discussed in Lesson 1. There is also the possibility of collaborating by texting/talking to others about changes that we are going to do to some files and vice-versa, thought everyone will go crazy afterwards and possibly a lot of bugs will arise. I don't see an harder point using Git when comparing with other methods, only easier points.
